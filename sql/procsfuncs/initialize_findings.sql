create function public.initialize_findings()
returns void as 
$BODY$
begin

    delete from findings;

    insert into findings (
        action_on ,
        action_by,
        inserted_on,
        inserted_by,
        colo_id,
        event_id,
        pr_event_id,
        event_type,
        path_report_complete ,
        age_exam,
        exam_date ,
        endoscopist_id ,
        facility_id,
        gender_calcd,
        end_proc_stat_rr,
        prep,
        indication_calculated,
        ind_scr_nosym,
        ind_scr_fhxcc,
        ind_scr_fhxplp,
        ind_sur_phxcc,
        ind_sur_phxplp,
        ind_sur_fhnpcc,
        ind_sur_ibd,
        ibdtyp_uc,
        ibdtyp_crohn,
        ibdtyp_ind,
        ind_diag_exam,
        dex_bleed,
        dex_cbh_diar,
        dex_cbh_cons,
        dex_cbh_diarcons,
        dex_elim_ibd,
        dex_biop,
        dex_fobt,
        dex_abn_test,
        dex_abn_tst_ctc,
        dex_abn_tst_bar_en,
        dex_abn_tst_oth,
        dex_plpect_plp,
        dex_ida,
        dex_oth,
        find_calc_normal ,
        find_calc_polyp ,
        find_calc_cancer ,
        find_calc_other ,
        fnd_norm_ex ,
        fnd_plp ,
        find_other ,
        find_oth_bmc ,
        find_oth_ibd ,
        find_oth_biop ,
        find_oth_other ,
        wthdrwl_time,
        completed ,
        abort_reas_pp,
        abort_reas_obs,
        abort_reas_sedprob,
        abort_reas_tc,
        abort_reas_oth,
        fup_10,
        fup_gt10,
        fu_form_completed,
        comp_none,
        comp_bleed,
        comp_perf,
        comp_cardio,
        comp_resparr)
        select
        current_timestamp,
        current_user,
        current_date,
        current_user,
        colo_id,
        c.event_id,
        p.event_id as pr_event_id,
        e.event_type,
        p.path_report_complete,
        EXTRACT(YEAR FROM age(e.event_date,pn.dob)),
        e.event_date,
        ed.endoscopist_id,
        b.facility_id ,
        pn.gender_calcd,
        end_proc_stat_rr,
        prep,
        indication_calculated,
        ind_scr_nosym ,
        ind_scr_fhxcc ,
        ind_scr_fhxplp ,
        ind_sur_phxcc ,
        ind_sur_phxplp ,
        ind_sur_fhnpcc ,
        ind_sur_ibd ,
        ibdtyp_uc ,
        ibdtyp_crohn ,
        ibdtyp_ind ,
        ind_diag_exam ,
        dex_bleed ,
        dex_cbh_diar ,
        dex_cbh_cons ,
        dex_cbh_diarcons,
        dex_elim_ibd ,
        dex_biop ,
        dex_fobt ,
        dex_abn_test ,
        dex_abn_tst_ctc ,
        dex_abn_tst_bar_en ,
        dex_abn_tst_oth ,
        dex_plpect_plp ,
        dex_ida ,
        dex_oth,
        find_calc_normal ,
        find_calc_polyp ,
        find_calc_cancer ,
        find_calc_other ,
        fnd_norm_ex,
        fnd_plp,
        find_other,
        find_oth_bmc,
        find_oth_ibd,
        find_oth_biop,
        find_oth_other,
        wthdrwl_time,
        case when 
                ((end_proc_stat_rr = '1' or end_proc_stat_rr = '2' or  end_proc_stat_rr = '10' or end_proc_stat_rr = '11' or end_proc_stat_rr = '' or end_proc_stat_rr = '99') and
                abort_reas_obs != '1' and
                abort_reas_oth != '1' and
                abort_reas_pp != '1' and
                abort_reas_sedprob != '1' and
                abort_reas_tc != '1') then 1 else 0 end as completed,
        abort_reas_pp,
        abort_reas_obs,
        abort_reas_sedprob,
        abort_reas_tc,
        abort_reas_oth,
        fup_10,
        fup_gt10,
        fu_form_completed,
        comp_none,
        comp_bleed,
        comp_perf,
        comp_cardio,
        comp_resparr
        from colo c join event e on c.event_id = e.event_id join batch b on e.batch_id = b.batch_id join person pn on e.person_id = pn.person_id join endoscopist ed on e.endo_code = ed.endoscopist_id
        left outer join (select * from path_report where path_report_complete = 1) as  p on c.event_id = p.event_id where pn.refused = 0 and e.event_type = 'Colonoscopy' ;
end;
$BODY$
language plpgsql;
grant execute on function public.initialize_findings() to nhcr2_data;